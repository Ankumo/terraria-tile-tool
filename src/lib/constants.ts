import { EBiome, ETileID, EWallID } from './enums';
import { SpriteInfo, BiomeInfo, SwapMission } from './types';
import {
    createReplaceGrass,
    createReplaceTile,
    createReplaceWall,
} from './utils';

export const bgInfo: Record<number, SpriteInfo> = {
    7: { offset: -50 },
    8: { offset: -50 },
    9: { offset: -150, scale: 1.05 },
    10: { offset: -280, scale: 1.1 },
    11: { offset: -420, scale: 1.25 },
    12: { offset: -120 },
    13: { offset: -250, flip: true },
    14: { offset: -380 },
    15: { offset: -150 },
    16: { offset: -250 },
    17: { offset: -380 },
    18: {},
    19: {},
    20: { offset: -550 },
    21: { offset: -350 },
    22: {},
    23: { offset: -100, scale: 1.05 },
    24: { offset: -100 },
    25: {},
    26: {},
    27: {},
    28: { offset: -500 },
    29: {},
    30: { offset: -300 },
    31: { offset: -400 },
    32: { offset: -50, scale: 1.1 },
    33: { offset: -100 },
    35: { offset: -30 },
    36: { offset: -150 },
    37: { offset: -170 },
    38: { offset: -210 },
    39: { offset: -250 },
    41: { offset: -50, scale: 1.1 },
    42: { offset: -100 },
    43: { offset: -120 },
    44: { offset: -250 },
    45: { offset: -380 },
    46: { offset: -150 },
    47: { offset: -250 },
    48: { offset: -350 },
    50: { offset: -25 },
    51: { offset: -150 },
    52: { offset: -275 },
    53: { offset: -50 },
    54: { offset: -150 },
    55: { offset: -250 },
    56: { offset: -100 },
    57: { flip: true },
    58: { offset: -300 },
    59: { offset: 280 },
    60: { offset: -150 },
    61: { offset: -250 },
    62: { offset: -100, scale: 1.05 },
    63: {},
    90: {},
    91: { offset: -250 },
    92: { offset: -350 },
    93: {
        pad: 74,
        count: 4,
        single: false,
        offset: -100,
    },
    94: {
        pad: 19,
        count: 4,
        single: false,
        offset: -200,
    },
    95: { offset: -110 },
    96: { offset: -180 },
    97: { offset: -250 },
    98: { offset: -100, scale: 1.05 },
    99: {},
    100: {},
    101: {},
    102: { offset: -40 },
    103: { offset: -120 },
    104: {},
    105: { offset: -120 },
    106: { offset: -250 },
    107: { offset: -380 },
    108: { offset: -350 },
    109: { offset: -500 },
    110: { offset: -500 },
    111: { offset: -500 },
    171: { offset: 0 },
    172: { offset: -350 },
    174: { offset: 100 },
    175: { offset: 0 },
    176: { offset: 500 },
    177: { offset: -150 },
    178: { offset: -300 },
    179: { offset: 50 },
    180: {
        count: 4,
        single: false,
        offset: 150,
    },
    184: { offset: 0 },
    207: { offset: -300 },
    208: { offset: -500 },
    209: { offset: -500 },
    210: { offset: -500 },
    211: {},
    212: { offset: -300, flip: true },
    213: { offset: -450 },
    214: { offset: -100 },
    215: { offset: -250 },
    216: { offset: -400 },
    217: { offset: -400 },
    218: { offset: -500 },
    219: {
        single: true,
        scale: 2,
        offset: -450,
    },
    220: {
        single: true,
        scale: 2,
        offset: -600,
    },
    221: {
        single: true,
        scale: 2,
        offset: -700,
    },
    222: { offset: 0 },
    223: { offset: -180 },
    224: { offset: -380 },
    225: { offset: -100 },
    226: { offset: -250, flip: true },
    227: { offset: -400 },
    228: {},
    229: { offset: -150 },
    230: { offset: -250 },
    231: { offset: 0 },
    232: { offset: -150 },
    233: { offset: -300 },
    234: { offset: 130 },
    235: {
        single: true,
        scale: 1.7,
        offset: -480,
    },
    236: { offset: -400 },
    237: { offset: -120 },
    238: { offset: -50 },
    239: { offset: -220 },
    240: { offset: 0 },
    241: { offset: 250, flip: true },
    242: { offset: 150 },
    243: { offset: 50 },
    244: { offset: 0 },
    245: { offset: 0 },
    246: { offset: 0 },
    247: { offset: -100 },
    248: { offset: 120 },
    249: { offset: 70 },
    250: { offset: 60 },
    251: {
        offset: -450,
        single: false,
        count: 4,
        delay: 250,
    },
    255: { offset: 0 },
    256: { offset: 0 },
    257: { offset: -50 },
    258: { offset: 500 },
    259: { offset: 60 },
    260: { offset: 0 },
    261: {},
    262: { offset: -350 },
    263: { offset: 370 },
    264: { offset: -300 },
    265: { offset: -450 },
    266: { offset: -150 },
    267: { offset: 0 },
    268: { offset: -300 },
    269: { offset: 550 },
    270: { offset: -150 },
    271: {
        single: true,
        scale: 2,
        offset: -470,
    },
    272: {
        single: true,
        scale: 2,
        offset: -500,
    },
    273: {
        single: true,
        offset: -550,
        scale: 2,
    },
    274: {},
    275: {},
    276: {},
    277: { offset: 200 },
    278: { offset: -75 },
    279: {},
    280: { offset: 150 },
    281: { single: true, offset: -100, scale: 1.25 },
    282: { offset: -100 },
    283: { offset: 180 },
    284: { offset: 200 },
    285: { offset: 270 },
    286: { offset: 160 },
    287: { offset: -230 },
    288: { offset: -230 },
    289: { offset: -50 },
    1000: { offset: 450 },
    1001: {
        single: true,
        offset: -100,
        scale: 1.75,
    },
    1002: { offset: 100 },
    1003: { offset: 100 },
    1004: {},
    1005: { offset: 170 },
    1006: {
        single: true,
        offset: -125,
        scale: 1.75,
    },
    1007: {
        single: true,
        scale: 2,
        offset: -425,
    },
    1008: {
        single: true,
        offset: -150,
        scale: 1.5,
    },
    1009: { offset: 300 },
    1010: { offset: -150 },
    1011: { offset: -170 },
    1012: { offset: 200 },
    1013: {
        single: true,
        offset: -300,
        scale: 1.5,
    },
};

export const biomeInfo: Record<EBiome, BiomeInfo> = {
    [EBiome.CORRUPTION]: {
        sets: [
            [32, 33, 12, 13, 14],
            [32, 33, 56, 57, 58],
            [32, 33, 211, 212, 213],
            [32, 33, 225, 226, 227],
            [32, 33, 240, 241, 242],
        ],
        skyF: {
            d: 'brightness(85%) hue-rotate(9deg)',
            n: 'brightness(115%) hue-rotate(15deg)',
        },
        cloudsF: {
            d: 'hue-rotate(20deg) brightness(80%) contrast(70%)',
            n: 'brightness(20%) contrast(100%) hue-rotate(9deg)',
        },
        f: {
            n: 'brightness(17%) contrast(101%)',
        },
    },
    [EBiome.CRIMSON]: {
        sets: [
            [41, 42, 43, 44, 45],
            [41, 42, 105, 106, 107],
            [41, 42, 174, -1, 175],
            [41, 42, 214, 215, 216],
            [41, 42, -1, 229, 230],
            [-1, -1, 255, 256, 257],
        ],
        f: {
            n: 'brightness(20%) grayscale(65%) contrast(102%)',
        },
        skyF: {
            d: 'hue-rotate(8deg) sepia(30%)',
        },
        cloudsF: {
            d: 'hue-rotate(55deg) sepia(25%) brightness(86%) contrast(70%)',
            n: 'brightness(10%) contrast(90%) hue-rotate(125deg)',
        },
    },
    [EBiome.DESERT]: {
        sets: [
            [23, 22, 21, 20],
            [23, 22, 108, 109],
            [23, 22, 207, 208],
            [23, 22, 217, 218],
            [-1, -1, 248, 249, 250],
        ],
        f: {
            n: 'brightness(15%) contrast(105%)',
        },
    },
    [EBiome.FOREST]: {
        sets: [
            [7, 8, 50, 51, 52],
            [7, 8, 53, 54, 55],
            [7, 90, 91, -1, 92],
            [7, 90, 91, -1, 11],
            [93, 94],
            [93, 94, -1, -1, 55],
            [93, 94, -1, -1, 11],
            [171, 172, 251],
            [176, 177, 178],
            [176, 177, 178, -1, 11],
            [176, 177, 178, -1, 55],
            [179, 180, 184],
            [277, 278, 279],
            [280, 281, 282],
            [7, 8, 9, 10, 11],
        ],
        f: {
            n: 'brightness(15%) contrast(105%)',
        },
    },
    [EBiome.HALLOW]: {
        sets: [
            [24, 25, 29, 30, 31],
            [24, 25, 102, 103, 104],
            [24, 25, 219, 220, 221],
            [246, 247, 243, 244, 245],
            [24, 25, -1, 261, 262],
        ],
        f: {
            n: 'brightness(15%) contrast(105%)',
        },
    },
    [EBiome.JUNGLE]: {
        sets: [
            [-1, 8, 15, 16, 17],
            [62, 63, 59, 60, 61],
            [-1, 8, 222, 223, 224],
            [-1, -1, 237, 238, 239],
            [-1, -1, 284, 285, 286],
            [-1, -1, 271, 272, 273],
        ],
        f: {
            d: 'hue-rotate(-10deg)',
            n: 'hue-rotate(-10deg) brightness(15%) contrast(103%)',
        },
        skyF: {
            d: 'hue-rotate(-22deg) saturate(80%) brightness(125%) sepia(42%)',
            n: 'hue-rotate(-50deg) saturate(100%) brightness(145%) sepia(40%)',
        },
        cloudsF: {
            d: 'hue-rotate(-50deg) brightness(85%) contrast(105%)',
            n: 'hue-rotate(-35deg) brightness(45%) contrast(107%)',
        },
    },
    [EBiome.MUSHROOM]: {
        sets: [
            [7, 8, 46, 47, 48],
            [7, 8, 231, 232, 233],
            [7, 8, 234, 235, 236],
            [7, 8, 287, 288, 289],
        ],
        f: {
            d: 'brightness(60%) contrast(115%)',
            n: 'brightness(60%) contrast(115%)',
        },
        skyF: {
            d: 'brightness(11%) contrast(107%)',
        },
        cloudsF: {
            d: 'brightness(30%) contrast(111%)',
        },
    },
    [EBiome.OCEAN]: {
        sets: [
            [-1, -1, 28],
            [-1, -1, 110],
            [-1, -1, 111],
            [-1, -1, 209],
            [-1, -1, 210],
            [-1, -1, 283],
        ],
        f: {
            n: 'brightness(15%) contrast(105%)',
        },
    },
    [EBiome.UNDERWORLD]: {
        sets: [
            [-1, 1003, 1002, 1001, 1000],
            [1009, 1008, 1007, 1006, 1005],
            [1009, 1013, 1012, 1011, 1010],
        ],
    },
    [EBiome.SNOW]: {
        sets: [
            [35, 36, 37, 38, 39],
            [35, 36, 95, 96, 97],
            [98, 99],
            [98, 99, 95, 96, 97],
            [98, 99, 37, 38, 39],
            [98, 100],
            [98, 100, 95, 96, 97],
            [98, 100, 37, 38, 39],
            [98, 101, 95, 96, 97],
            [98, 101, 37, 38, 39],
            [-1, -1, 258, 259, 260],
            [-1, -1, 263, 264, 265],
            [269, 270, 267, 266, 268],
        ],
        f: {
            n: 'brightness(15%) contrast(105%)',
        },
    },
};

export const wallOffset = 1000;

export const defaultSwaps: SwapMission[] = [
    {
        icon: ETileID.CorruptGrass,
        name: 'Purify Corruption',
        logic: [
            ...createReplaceGrass(EWallID.CorruptGrassUnsafe),
            createReplaceTile(ETileID.CorruptThorns, ETileID.None),
            createReplaceTile(ETileID.CorruptGrass, ETileID.Grass),
            createReplaceTile(ETileID.Ebonstone, ETileID.Stone),
            createReplaceTile(ETileID.Ebonsand, ETileID.Sand),
            createReplaceTile(
                ETileID.CorruptHardenedSand,
                ETileID.HardenedSand,
            ),
            createReplaceTile(ETileID.CorruptSandstone, ETileID.Sandstone),
            createReplaceTile(ETileID.CorruptIce, ETileID.IceBlock),
            createReplaceTile(ETileID.CorruptPlants, ETileID.Plants),
            createReplaceWall(EWallID.EbonstoneUnsafe, EWallID.Stone),
            createReplaceWall(EWallID.EbonstoneEcho, EWallID.Stone),
            createReplaceWall(EWallID.CorruptionUnsafe1, EWallID.RocksUnsafe1),
            createReplaceWall(EWallID.Corruption1Echo, EWallID.RocksUnsafe1),
            createReplaceWall(EWallID.CorruptionUnsafe2, EWallID.RocksUnsafe2),
            createReplaceWall(EWallID.Corruption2Echo, EWallID.RocksUnsafe2),
            createReplaceWall(EWallID.CorruptionUnsafe3, EWallID.RocksUnsafe3),
            createReplaceWall(EWallID.Corruption3Echo, EWallID.RocksUnsafe3),
            createReplaceWall(EWallID.CorruptionUnsafe4, EWallID.RocksUnsafe4),
            createReplaceWall(EWallID.Corruption4Echo, EWallID.RocksUnsafe4),
            createReplaceWall(
                EWallID.CorruptHardenedSand,
                EWallID.HardenedSand,
            ),
            createReplaceWall(
                EWallID.CorruptHardenedSandEcho,
                EWallID.HardenedSand,
            ),
            createReplaceWall(EWallID.CorruptSandstone, EWallID.Sandstone),
            createReplaceWall(EWallID.CorruptSandstoneEcho, EWallID.Sandstone),
        ],
    },
    {
        icon: ETileID.CrimsonGrass,
        name: 'Purify Crimson',
        logic: [
            ...createReplaceGrass(EWallID.CrimsonGrassUnsafe),
            createReplaceTile(ETileID.CrimsonThorns, ETileID.None),
            createReplaceTile(ETileID.CrimsonGrass, ETileID.Grass),
            createReplaceTile(ETileID.Crimstone, ETileID.Stone),
            createReplaceTile(ETileID.Crimsand, ETileID.Sand),
            createReplaceTile(
                ETileID.CrimsonHardenedSand,
                ETileID.HardenedSand,
            ),
            createReplaceTile(ETileID.CrimsonSandstone, ETileID.Sandstone),
            createReplaceTile(ETileID.FleshIce, ETileID.IceBlock),
            createReplaceTile(ETileID.CrimsonPlants, ETileID.Plants),
            createReplaceTile(ETileID.CrimsonVines, ETileID.Vines),
            createReplaceWall(EWallID.CrimstoneUnsafe, EWallID.Stone),
            createReplaceWall(EWallID.CrimstoneEcho, EWallID.Stone),
            createReplaceWall(EWallID.CrimsonUnsafe1, EWallID.RocksUnsafe1),
            createReplaceWall(EWallID.Crimson1Echo, EWallID.RocksUnsafe1),
            createReplaceWall(EWallID.CrimsonUnsafe2, EWallID.RocksUnsafe2),
            createReplaceWall(EWallID.Crimson2Echo, EWallID.RocksUnsafe2),
            createReplaceWall(EWallID.CrimsonUnsafe3, EWallID.RocksUnsafe3),
            createReplaceWall(EWallID.Crimson3Echo, EWallID.RocksUnsafe3),
            createReplaceWall(EWallID.CrimsonUnsafe4, EWallID.RocksUnsafe4),
            createReplaceWall(EWallID.Crimson4Echo, EWallID.RocksUnsafe4),
            createReplaceWall(
                EWallID.CrimsonHardenedSand,
                EWallID.HardenedSand,
            ),
            createReplaceWall(
                EWallID.CrimsonHardenedSandEcho,
                EWallID.HardenedSand,
            ),
            createReplaceWall(EWallID.CrimsonSandstone, EWallID.Sandstone),
            createReplaceWall(EWallID.CrimsonSandstoneEcho, EWallID.Sandstone),
        ],
    },
    {
        icon: ETileID.HallowedGrass,
        name: 'Purify Hallow',
        logic: [
            ...createReplaceGrass(EWallID.HallowedGrassUnsafe),
            createReplaceTile(ETileID.GolfGrassHallowed, ETileID.Grass),
            createReplaceTile(ETileID.HallowedGrass, ETileID.Grass),
            createReplaceTile(ETileID.Pearlstone, ETileID.Stone),
            createReplaceTile(ETileID.Pearlsand, ETileID.Sand),
            createReplaceTile(ETileID.HallowHardenedSand, ETileID.HardenedSand),
            createReplaceTile(ETileID.HallowSandstone, ETileID.Sandstone),
            createReplaceTile(ETileID.HallowedIce, ETileID.IceBlock),
            createReplaceTile(ETileID.HallowedPlants, ETileID.Plants),
            createReplaceTile(ETileID.HallowedPlants2, ETileID.Plants2),
            createReplaceTile(ETileID.HallowedVines, ETileID.Vines),
            createReplaceWall(EWallID.PearlstoneBrickUnsafe, EWallID.Stone),
            createReplaceWall(EWallID.PearlstoneEcho, EWallID.Stone),
            createReplaceWall(EWallID.HallowUnsafe1, EWallID.RocksUnsafe1),
            createReplaceWall(EWallID.Hallow1Echo, EWallID.RocksUnsafe1),
            createReplaceWall(EWallID.HallowUnsafe2, EWallID.RocksUnsafe2),
            createReplaceWall(EWallID.Hallow2Echo, EWallID.RocksUnsafe2),
            createReplaceWall(EWallID.HallowUnsafe3, EWallID.RocksUnsafe3),
            createReplaceWall(EWallID.Hallow3Echo, EWallID.RocksUnsafe3),
            createReplaceWall(EWallID.HallowUnsafe4, EWallID.RocksUnsafe4),
            createReplaceWall(EWallID.Hallow4Echo, EWallID.RocksUnsafe4),
            createReplaceWall(EWallID.HallowHardenedSand, EWallID.HardenedSand),
            createReplaceWall(
                EWallID.HallowHardenedSandEcho,
                EWallID.HardenedSand,
            ),
            createReplaceWall(EWallID.HallowSandstone, EWallID.Sandstone),
            createReplaceWall(EWallID.HallowSandstoneEcho, EWallID.Sandstone),
        ],
    },
    {
        name: 'Remove Dungeon Cracked Bricks',
        icon: ETileID.CrackedBlueDungeonBrick,
        logic: [
            createReplaceTile(ETileID.CrackedBlueDungeonBrick, ETileID.None),
            createReplaceTile(ETileID.CrackedGreenDungeonBrick, ETileID.None),
            createReplaceTile(ETileID.CrackedPinkDungeonBrick, ETileID.None),
        ],
    },
    {
        name: 'Remove Dungeon Spikes',
        icon: ETileID.Spikes,
        logic: [createReplaceTile(ETileID.Spikes, ETileID.None)],
    },
    {
        name: 'Remove Temple Spikes',
        icon: ETileID.WoodenSpikes,
        logic: [createReplaceTile(ETileID.WoodenSpikes, ETileID.None)],
    },
    {
        name: 'Clear Meteorite',
        icon: ETileID.Meteorite,
        logic: [createReplaceTile(ETileID.Meteorite, ETileID.Dirt)],
    },
];
